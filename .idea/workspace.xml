<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="69d0adb5-df78-4693-8ecd-77b9064adb9d" name="Changes" comment="CLASE 02&#10;Aprendizajes: &#10;Encapsulación: controlar el acceso a los atributos y métodos de una clase.&#10;              Qué son los modificadores de acceso public y private.&#10;              Métodos de lectura de atributos, que son los métodos getters.&#10;              Métodos de modificación de los atributos, que son los métodos setters.&#10;              El uso de la palabra clave &quot;import&quot; para importar clases de otros paquetes.&#10;              El uso de la palabra clave &quot;this&quot;.&#10;              Buenas prácticas para dividir el código en paquetes, siguiendo la convención de dominio de la empresa al revés, por ejemplo, &quot;com.aluracursos.screenmatch&quot;.">
      <change afterPath="$PROJECT_DIR$/src/Clase03/CalculadoraDeTiempo.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/Clase03/Pelicula.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/Clase03/Principal.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/Clase03/Serie.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/Clase03/Titulo.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;merarisosa&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/merarisosa/ALURA-JAVA-POO.git&quot;,
    &quot;accountId&quot;: &quot;5ee10d13-177c-454f-930a-e9d9bcdadbad&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2f1tQICudO5sZ1V5Lw68uH1Jhr8" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/merarimaysosa/IdeaProjects/Alura-Back- Java aplicando la POO&quot;,
    &quot;onboarding.tips.debug.path&quot;: &quot;/Users/merarimaysosa/IdeaProjects/Alura-Back- Java aplicando la POO/src/Main.java&quot;
  }
}</component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="69d0adb5-df78-4693-8ecd-77b9064adb9d" name="Changes" comment="" />
      <created>1712980402494</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1712980402494</updated>
    </task>
    <task id="LOCAL-00001" summary="Creacion de proyecto basico ScreenMatch, donde se hace uso de metodos, clases y atributos de clases">
      <option name="closed" value="true" />
      <created>1713244491575</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1713244491575</updated>
    </task>
    <task id="LOCAL-00002" summary="CLASE 02&#10;Aprendizajes: &#10;Encapsulación: controlar el acceso a los atributos y métodos de una clase.&#10;              Qué son los modificadores de acceso public y private.&#10;              Métodos de lectura de atributos, que son los métodos getters.&#10;              Métodos de modificación de los atributos, que son los métodos setters.&#10;              El uso de la palabra clave &quot;import&quot; para importar clases de otros paquetes.&#10;              El uso de la palabra clave &quot;this&quot;.&#10;              Buenas prácticas para dividir el código en paquetes, siguiendo la convención de dominio de la empresa al revés, por ejemplo, &quot;com.aluracursos.screenmatch&quot;.">
      <option name="closed" value="true" />
      <created>1713521326902</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1713521326902</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Creacion de proyecto basico ScreenMatch, donde se hace uso de metodos, clases y atributos de clases" />
    <MESSAGE value="CLASE 02&#10;Aprendizajes: &#10;Encapsulación: controlar el acceso a los atributos y métodos de una clase.&#10;              Qué son los modificadores de acceso public y private.&#10;              Métodos de lectura de atributos, que son los métodos getters.&#10;              Métodos de modificación de los atributos, que son los métodos setters.&#10;              El uso de la palabra clave &quot;import&quot; para importar clases de otros paquetes.&#10;              El uso de la palabra clave &quot;this&quot;.&#10;              Buenas prácticas para dividir el código en paquetes, siguiendo la convención de dominio de la empresa al revés, por ejemplo, &quot;com.aluracursos.screenmatch&quot;." />
    <option name="LAST_COMMIT_MESSAGE" value="CLASE 02&#10;Aprendizajes: &#10;Encapsulación: controlar el acceso a los atributos y métodos de una clase.&#10;              Qué son los modificadores de acceso public y private.&#10;              Métodos de lectura de atributos, que son los métodos getters.&#10;              Métodos de modificación de los atributos, que son los métodos setters.&#10;              El uso de la palabra clave &quot;import&quot; para importar clases de otros paquetes.&#10;              El uso de la palabra clave &quot;this&quot;.&#10;              Buenas prácticas para dividir el código en paquetes, siguiendo la convención de dominio de la empresa al revés, por ejemplo, &quot;com.aluracursos.screenmatch&quot;." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/Main.java</url>
          <line>11</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>